- name: Put SELinux in permissive mode, logging actions that would be blocked.
  selinux:
    policy: targeted
    state: permissive

- name: Installing kubernetes base packages
  yum:
    name: '*'
    state: latest

- name: Turning off the swap and removing from fstab
  shell: "swapoff -a"  # && sed -i.bak -r 's/(.+ swap .+)/#\1/' /etc/fstab

- name: Add the overlay module
  modprobe:
    name: '{{ item }}'
    state: present
  loop: '{{ modules }}'   

- name: Create the containerd directory
  file:
    path: '{{ item }}'
    state: directory
    mode: '0755'
  loop: '{{ config_folders }}'

- name: Insert templates files
  copy:
    src: '{{ item.value.src }}'
    dest: '{{ item.value.dest }}'
    mode: 755
    force: true
  with_dict: '{{ k8s_templates }}'

- name: Download k8s/dep binary files
  get_url:
    url: '{{ item.value.download }}'
    dest: '{{ item.value.dest }}'
    mode: 755
  with_dict: '{{ k8s_bin_dep }}'

- name: Download k8s/dep tar files
  get_url:
    url: '{{ item.value.download }}'
    dest: '{{ item.value.tar }}'
    mode: 755
  with_dict: '{{ k8s_tars }}'

- name: Extract files on the correct folders
  unarchive:
    src: '{{ item.value.tar }}'
    dest: '{{ item.value.dest }}'
    mode: 755
    remote_src: true
  with_dict: '{{ k8s_tars }}'

#- name: Add docker-ce repository
#  yum_repository:
#    name: docker-ce
#    description: YUM Docker Repo
#    baseurl: https://download.docker.com/linux/centos/docker-ce.repo
    # gpgcheck: no

#- name: Installing kubernetes base packages
#  yum:
#    name: '{{ cri_dep }}'
#    state: present
#    exclude: kubernetes

#- name: Installing kubernetes base packages
#  yum:
#    name: '{{ kube_base }}'
#    state: present
#    exclude: kubernetes
    #disable_gpg_check: yes

#- name: Generating the default containerd config
#  shell: 'containerd config default > /etc/containerd/config.toml'

#- name: Replace after the expression till the end of the file (requires Ansible >= 2.4)
#  replace:
#    path: /etc/containerd/config.toml
#    regexp: '^(.*systemd_cgroup).+$'
#    replace: '\1 = true'

#- name: Loading modes
  #shell: 'sysctl --system'

#- name: Reload Daemon
  #systemd:
    #daemon_reload: yes

#- name: Start and Enable services
#  systemd:
#    name: '{{ item }}'
#    state: restarted
#    enabled: yes
#  loop: '{{ kube_base_services }}'
